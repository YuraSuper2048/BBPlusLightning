using TileBasedLightning;var map = new[,]{	{ 3, 0, 0, 0, 0, 0, 2, 7, 3, 2 },	{ 1, 6, 6, 6, 6, 6, 1, 6, 8, 10 },	{ 8, 7, 7, 7, 2, 6, 8, 0, 6, 10 },	{ 8, 6, 6, 6, 10, 6, 1, 6, 8, 10 },	{ 8, 6, 6, 6, 10, 6, 1, 6, 8, 10 },	{ 8, 6, 6, 6, 10, 6, 1, 6, 8, 10 },	{ 8, 6, 6, 6, 10, 6, 1, 6, 8, 10 },	{ 8, 6, 6, 6, 10, 6, 1, 6, 8, 10 },	{ 8, 6, 6, 6, 10, 6, 1, 6, 8, 10 },	{ 8, 6, 6, 6, 10, 6, 13, 6, 8, 10 },	{ 4, 9, 9, 9, 5, 9, 9, 9, 4, 5 }};var mapSize = new Vector2Int(map.GetLength(0), map.GetLength(1));var tiles = new Tile[mapSize.x, mapSize.y];for (var x = 0; x < mapSize.x; x++)for (var y = 0; y < mapSize.y; y++)	tiles[x, y] = new Tile(x, y, (Tile.Type)map[x, y]);Lightning.CalculateLightning(ref tiles, 4, 6, Color.red);Lightning.CalculateLightning(ref tiles, 4, 2, Color.green);Lightning.Print(tiles);